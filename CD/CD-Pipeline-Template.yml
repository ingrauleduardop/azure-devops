# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

parameters:
- name : 'projectName'
  default: ''
  type: string
- name : 'appName'
  default: ''
  type: string

stages:
  
- stage: deploy_stage
  displayName: Deploy Stage
  jobs:
  - deployment: deploy_job_manifest
    displayName: Deploy Job - Kubernetes
    pool: 'Azure Pipelines'
    environment: 'appcontoso.microservices-dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: ${{ parameters.appName }}
              dockerRegistryEndpoint: microservices-cr
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              kubernetesServiceConnection: microservices-k8s
              manifests: |
                manifests/deployment.yml
                manifests/service.yml
              imagePullSecrets: ${{ parameters.appName }}
              containers: |
                /${{ parameters.appName }}:'dev'
          - task: Kubernetes@1
            name: get
            displayName: 'Get services in the new namespace'
            continueOnError: true
            inputs:
              command: get
              namespace: 'microservices-dev'
              arguments: svc
              outputFormat: jsonpath='http://{.items[0].status.loadBalancer.ingress[0].ip}:{.items[0].spec.ports[0].port}'
              
          # Getting the IP of the deployed service and writing it to a variable for posing comment
          - script: |
              url="$(get.KubectlOutput)"
              message="Your review app has been deployed"
              if [ ! -z "$url" -a "$url" != "http://:" ] 
              then
                message="${message} and is available at $url.<br><br>[Learn More](https://aka.ms/testwithreviewapps) about how to test and provide feedback for the app."
              fi
              echo "##vso[task.setvariable variable=GITHUB_COMMENT]$message"